name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get release description
      run: |
        echo "##[set-output name=description;]$(git for-each-ref --format=$'%(contents:subject)\n\n%(contents:body)' ${{ github.ref }})"
      id: release-description

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: "${{ steps.release-description.outputs.description }}"
        prerelease: true

  build_docs:
    name: Build Docs
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        xcode: ["11.4"]

    steps:
    - uses: actions/checkout@v2

    - name: Select Xcode ${{ matrix.xcode }}
      run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

    - name: Cache SwiftPM
      uses: actions/cache@v1
      with:
        path: CIDependencies/.build
        key: ${{ runner.os }}-xcode_${{ matrix.xcode }}-swiftpm-ci-deps-${{ github.workspace }}-${{ hashFiles('CIDependencies/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-xcode_${{ matrix.xcode }}-swiftpm-ci-deps-${{ github.workspace }}

    - name: Build docs
      run: swift run --configuration release --package-path ./CIDependencies/ sourcedocs generate --spm-module Persist

    - name: Upload Docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./Documentation/Reference/
