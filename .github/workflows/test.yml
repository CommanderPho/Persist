name: Tests

on: [push]

jobs:
  macos_tests:
    name: macOS Tests (SwiftPM)
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        xcode: ["11.4"]

    steps:
    - uses: actions/checkout@v2

    - name: Select Xcode ${{ matrix.xcode }}
      run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

    - name: SwiftPM tests
      run: swift test --enable-code-coverage

    - name: Convert coverage to lcov
      run: xcrun llvm-cov export -format="lcov" .build/debug/PersistPackageTests.xctest/Contents/MacOS/PersistPackageTests -instr-profile .build/debug/codecov/default.profdata > coverage.lcov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true

  xcode_tests:
    name: ${{ matrix.platform }} Tests (Xcode)
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        xcode: ["11.4"]
        platform: ["iOS", "tvOS"]

    steps:
    - uses: actions/checkout@v2

    - name: Select Xcode ${{ matrix.xcode }}
      run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

    - name: Cache SwiftPM
      uses: actions/cache@v1
      with:
        path: CIDependencies/.build
        key: ${{ runner.os }}-xcode_${{ matrix.xcode }}-swiftpm-ci-deps-${{ github.workspace }}-${{ hashFiles('CIDependencies/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-xcode_${{ matrix.xcode }}-swiftpm-ci-deps-${{ github.workspace }}

    - name: Run Tests
      run: swift run --configuration release --package-path ./CIDependencies/ xcutils test ${{ matrix.platform }} --scheme Persist --enable-code-coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true

  linux_tests:
    name: SwiftPM on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, ubuntu-latest]
        swift: ["5.2.3"]

    steps:
    - uses: actions/checkout@v2

    - name: Install swiftenv
      run: |
        eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
        echo "::set-env name=SWIFTENV_ROOT::$HOME/.swiftenv"
        echo "::add-path::$SWIFTENV_ROOT/bin:$PATH"

    - name: swift test
      run: swift test --enable-test-discovery
